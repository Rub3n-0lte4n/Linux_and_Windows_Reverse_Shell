powershell -command "& {Add-Type @\"using System; using System.Runtime.InteropServices; public class WinAPI { [DllImport(\"user32.dll\")] public static extern bool ShowWindow(IntPtr hWnd, int nCmdShow); [DllImport(\"user32.dll\")] public static extern IntPtr GetForegroundWindow(); public const int SW_HIDE = 0; public const int SW_SHOW = 5; }\"; $shell = New-Object -ComObject Shell.Application; $windows = $shell.Windows(); foreach ($window in $windows) { if ($window.Minimized) { $hwnd = [System.IntPtr]::Zero; $windowHandle = $window.Hwnd; [WinAPI]::ShowWindow($windowHandle, [WinAPI]::SW_HIDE) } } }"